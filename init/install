#!/bin/bash

DOTFILES_PATH="${HOME}/ghq/github.com/0ta2/dotfiles"
DOTFILES_GITHUB="https://github.com/0ta2/dotfiles.git"

print_error() {
    printf "\033[31m    [×] %s\033[m\n" "$1"
}

print_success() {
    printf "\033[32m    [✓] %s\033[m\n" "$1"
}

print_warning() {
    printf "\033[33m    [!] %s\033[m\n" "$1"
}

print_title() {
    printf "\n\n\033[35m %s \033[m\n\n" "$1"
}

print_message() {
    printf "    %s\n" "$1"
}

DOTFILES_LOGO='
  ██████╗  ██████╗ ████████╗███████╗██╗██╗     ███████╗███████╗
  ██╔══██╗██╔═══██╗╚══██╔══╝██╔════╝██║██║     ██╔════╝██╔════╝
  ██║  ██║██║   ██║   ██║   █████╗  ██║██║     █████╗  ███████╗
  ██║  ██║██║   ██║   ██║   ██╔══╝  ██║██║     ██╔══╝  ╚════██║
  ██████╔╝╚██████╔╝   ██║   ██║     ██║███████╗███████╗███████║
  ╚═════╝  ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝
  =============================================================
  1. Download https://github.com/0ta2/dotfiles.git
  2. Symlinking dot files to your home directory

  Copyright (c) 2016 0ta2
  Licensed under the MIT license.
'

xcode_select_install() {
  print_message "xcode-select --install..."

  if xcode-select -p >/dev/null 2>&1; then
    print_warning "Already exist"
    exit 0
  else
    xcode-select --install >/dev/null 2>&1
    while :
    do
      if xcode-select -p >/dev/null 2>&1; then
        print_success "Sccessfully xcode-select --install"
        sleep 60
        break
      fi
        sleep 30
      done
  fi
}

# dotfiles download
download_dotfiles() {
  print_title "Download dotfiles"
  if [ -d "${DOTFILES_PATH}" ]; then
    print_warning "Already exists"
    exit 1
  else
    if is_exists "git"; then
      print_message "Git clone dotfiles..."
      mkdir -p "$(dirname "${DOTFILES_PATH}")"
      git clone --recursive -q "${DOTFILES_GITHUB}" "${DOTFILES_PATH}"
      print_success "Successfully downloaded"
    else
      print_message "Downloading dotfiles..."
      curl -sL https://github.com/0ta2/dotfiles/archive/refs/heads/main.tar.gz | tar xz
      mkdir -p "$(dirname "${DOTFILES_PATH}")"
      mv dotfiles-main "$DOTFILES_PATH"
      print_success "Successfully downloaded"
    fi
  fi
}

# dotfiles deploy
deploy_dotfiles() {
  cd "${DOTFILES_PATH}" || print_error "${DOTFILES_PATH}: Not found"

  if make deploy; then
    print_success "Sccessfully deploy"
  else
    print_error "Unsuccessfully deploy"
    exit 1
  fi
}

# dotfiles initialize
dotfiles_initialize() {
  print_title "Initializing dotfiles"

  if [ -e Makefile ]; then
    print_message "make init"
    make init
  else
    print_error "Makefile Not found"
  fi
}

# Main
main() {
  # Load utils
  # shellcheck source=/dev/null
  . "$(cd "$(dirname "$0")" && pwd)"/utils

  # print logo
  echo "${DOTFILES_LOGO}"

  # xcode-select install
  if is_mac; then
    xcode_select_install
  fi

  # download dotfiles
  # priority git -> curl
  download_dotfiles

  # make deploy to create symlink
  # create symlink
  deploy_dotfiles

  # execute shell files
  dotfiles_initialize
}


main
